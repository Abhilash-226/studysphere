// Update profile with full details
exports.updateProfile = async (req, res) => {
  try {
    const userId = req.user.id;
    
    // Check if the user is a tutor
    const user = await User.findById(userId);
    if (!user || user.role !== 'tutor') {
      return res.status(403).json({
        success: false,
        message: "Only tutors can access this resource"
      });
    }
    
    // Find the tutor profile
    let tutor = await Tutor.findOne({ user: userId });
    
    if (!tutor) {
      return res.status(404).json({
        success: false,
        message: "Tutor profile not found"
      });
    }
    
    // Extract fields from the request body
    const {
      bio,
      teachingMode,
      subjects,
      preferredClasses,
      location,
      hourlyRate,
      qualification,
      universityName,
      experience,
      graduationYear,
      specialization,
      certifications,
      availability
    } = req.body;
    
    // Update tutor profile
    tutor.bio = bio || tutor.bio;
    tutor.teachingMode = JSON.parse(teachingMode) || tutor.teachingMode;
    tutor.qualification = qualification || tutor.qualification;
    tutor.experience = experience || tutor.experience;
    tutor.specialization = specialization || tutor.specialization;
    tutor.universityName = universityName || tutor.universityName;
    tutor.graduationYear = graduationYear || tutor.graduationYear;
    tutor.hourlyRate = hourlyRate || tutor.hourlyRate;
    
    // Handle more complex fields
    if (location) {
      tutor.location = JSON.parse(location);
    }
    
    if (availability) {
      tutor.availability = JSON.parse(availability);
    }
    
    if (certifications) {
      tutor.certifications = JSON.parse(certifications);
    }
    
    // Handle file uploads
    if (req.files) {
      if (req.files.idDocument) {
        tutor.idDocument = req.files.idDocument[0].path;
      }
      
      if (req.files.qualificationDocument) {
        tutor.qualificationDocument = req.files.qualificationDocument[0].path;
      }
      
      if (req.files.profileImage) {
        user.profileImage = req.files.profileImage[0].path;
        await user.save();
      }
    }
    
    // Set the verification status to pending if it was not already approved
    if (tutor.verificationStatus !== 'approved') {
      tutor.verificationStatus = 'pending';
    }
    
    // Save the tutor
    await tutor.save();
    
    res.status(200).json({
      success: true,
      message: "Profile updated successfully",
      tutor: {
        bio: tutor.bio,
        teachingMode: tutor.teachingMode,
        qualification: tutor.qualification,
        experience: tutor.experience,
        specialization: tutor.specialization,
        universityName: tutor.universityName,
        graduationYear: tutor.graduationYear,
        hourlyRate: tutor.hourlyRate,
        location: tutor.location,
        availability: tutor.availability,
        verificationStatus: tutor.verificationStatus
      }
    });
  } catch (error) {
    console.error("Error updating tutor profile:", error);
    res.status(500).json({
      success: false,
      message: "Server error while updating profile",
      error: error.message
    });
  }
};
